/*
 * This file is generated by jOOQ.
 */
package io.exflo.postgres.jooq.tables.records;


import io.exflo.postgres.jooq.tables.ImportQueue;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImportQueueRecord extends UpdatableRecordImpl<ImportQueueRecord> implements Record4<Long, String, Short, Timestamp> {

    private static final long serialVersionUID = -253328841;

    /**
     * Setter for <code>public.import_queue.number</code>.
     */
    public ImportQueueRecord setNumber(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.import_queue.number</code>.
     */
    public Long getNumber() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.import_queue.hash</code>.
     */
    public ImportQueueRecord setHash(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.import_queue.hash</code>.
     */
    public String getHash() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.import_queue.stage</code>.
     */
    public ImportQueueRecord setStage(Short value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.import_queue.stage</code>.
     */
    public Short getStage() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>public.import_queue.timestamp</code>.
     */
    public ImportQueueRecord setTimestamp(Timestamp value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.import_queue.timestamp</code>.
     */
    public Timestamp getTimestamp() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, Short, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, Short, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ImportQueue.IMPORT_QUEUE.NUMBER;
    }

    @Override
    public Field<String> field2() {
        return ImportQueue.IMPORT_QUEUE.HASH;
    }

    @Override
    public Field<Short> field3() {
        return ImportQueue.IMPORT_QUEUE.STAGE;
    }

    @Override
    public Field<Timestamp> field4() {
        return ImportQueue.IMPORT_QUEUE.TIMESTAMP;
    }

    @Override
    public Long component1() {
        return getNumber();
    }

    @Override
    public String component2() {
        return getHash();
    }

    @Override
    public Short component3() {
        return getStage();
    }

    @Override
    public Timestamp component4() {
        return getTimestamp();
    }

    @Override
    public Long value1() {
        return getNumber();
    }

    @Override
    public String value2() {
        return getHash();
    }

    @Override
    public Short value3() {
        return getStage();
    }

    @Override
    public Timestamp value4() {
        return getTimestamp();
    }

    @Override
    public ImportQueueRecord value1(Long value) {
        setNumber(value);
        return this;
    }

    @Override
    public ImportQueueRecord value2(String value) {
        setHash(value);
        return this;
    }

    @Override
    public ImportQueueRecord value3(Short value) {
        setStage(value);
        return this;
    }

    @Override
    public ImportQueueRecord value4(Timestamp value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public ImportQueueRecord values(Long value1, String value2, Short value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImportQueueRecord
     */
    public ImportQueueRecord() {
        super(ImportQueue.IMPORT_QUEUE);
    }

    /**
     * Create a detached, initialised ImportQueueRecord
     */
    public ImportQueueRecord(Long number, String hash, Short stage, Timestamp timestamp) {
        super(ImportQueue.IMPORT_QUEUE);

        set(0, number);
        set(1, hash);
        set(2, stage);
        set(3, timestamp);
    }
}
