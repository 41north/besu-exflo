/*
 * This file is generated by jOOQ.
 */
package io.exflo.postgres.jooq.enums;


import io.exflo.postgres.jooq.Public;

import javax.annotation.processing.Generated;

import org.jooq.Catalog;
import org.jooq.EnumType;
import org.jooq.Schema;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public enum ContractCapability implements EnumType {

    ERC1155("ERC1155"),

    ERC1155_TOKEN_RECEIVER("ERC1155_TOKEN_RECEIVER"),

    ERC777("ERC777"),

    ERC165("ERC165"),

    ERC721("ERC721"),

    ERC721_METADATA("ERC721_METADATA"),

    ERC721_ENUMERABLE("ERC721_ENUMERABLE"),

    ERC20("ERC20"),

    ERC20_DETAILED("ERC20_DETAILED"),

    ERC20_BURNABLE("ERC20_BURNABLE"),

    ERC20_MINTABLE("ERC20_MINTABLE"),

    ERC20_PAUSABLE("ERC20_PAUSABLE"),

    ERC20_CAPPED("ERC20_CAPPED");

    private final String literal;

    private ContractCapability(String literal) {
        this.literal = literal;
    }

    @Override
    public Catalog getCatalog() {
        return getSchema() == null ? null : getSchema().getCatalog();
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public String getName() {
        return "contract_capability";
    }

    @Override
    public String getLiteral() {
        return literal;
    }
}
