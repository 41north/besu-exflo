/*
 * This file is generated by jOOQ.
 */
package io.exflo.postgres.jooq;


import io.exflo.postgres.jooq.tables.Account;
import io.exflo.postgres.jooq.tables.BalanceDelta;
import io.exflo.postgres.jooq.tables.BlockHeader;
import io.exflo.postgres.jooq.tables.ContractCreated;
import io.exflo.postgres.jooq.tables.ContractDestroyed;
import io.exflo.postgres.jooq.tables.ContractEvent;
import io.exflo.postgres.jooq.tables.FlywaySchemaHistory;
import io.exflo.postgres.jooq.tables.ImportQueue;
import io.exflo.postgres.jooq.tables.Metadata;
import io.exflo.postgres.jooq.tables.Ommer;
import io.exflo.postgres.jooq.tables.Transaction;
import io.exflo.postgres.jooq.tables.TransactionReceipt;
import io.exflo.postgres.jooq.tables.records.AccountRecord;
import io.exflo.postgres.jooq.tables.records.BalanceDeltaRecord;
import io.exflo.postgres.jooq.tables.records.BlockHeaderRecord;
import io.exflo.postgres.jooq.tables.records.ContractCreatedRecord;
import io.exflo.postgres.jooq.tables.records.ContractDestroyedRecord;
import io.exflo.postgres.jooq.tables.records.ContractEventRecord;
import io.exflo.postgres.jooq.tables.records.FlywaySchemaHistoryRecord;
import io.exflo.postgres.jooq.tables.records.ImportQueueRecord;
import io.exflo.postgres.jooq.tables.records.MetadataRecord;
import io.exflo.postgres.jooq.tables.records.OmmerRecord;
import io.exflo.postgres.jooq.tables.records.TransactionReceiptRecord;
import io.exflo.postgres.jooq.tables.records.TransactionRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<BalanceDeltaRecord, Long> IDENTITY_BALANCE_DELTA = Identities0.IDENTITY_BALANCE_DELTA;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> ACCOUNT_PKEY = UniqueKeys0.ACCOUNT_PKEY;
    public static final UniqueKey<BalanceDeltaRecord> BALANCE_DELTA_PKEY = UniqueKeys0.BALANCE_DELTA_PKEY;
    public static final UniqueKey<BlockHeaderRecord> BLOCK_HEADER_PKEY = UniqueKeys0.BLOCK_HEADER_PKEY;
    public static final UniqueKey<ContractCreatedRecord> CONTRACT_CREATED_PKEY = UniqueKeys0.CONTRACT_CREATED_PKEY;
    public static final UniqueKey<ContractDestroyedRecord> CONTRACT_DESTROYED_PKEY = UniqueKeys0.CONTRACT_DESTROYED_PKEY;
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = UniqueKeys0.FLYWAY_SCHEMA_HISTORY_PK;
    public static final UniqueKey<ImportQueueRecord> IMPORT_QUEUE_PKEY = UniqueKeys0.IMPORT_QUEUE_PKEY;
    public static final UniqueKey<ImportQueueRecord> IMPORT_QUEUE_HASH_KEY = UniqueKeys0.IMPORT_QUEUE_HASH_KEY;
    public static final UniqueKey<MetadataRecord> METADATA_PKEY = UniqueKeys0.METADATA_PKEY;
    public static final UniqueKey<OmmerRecord> OMMER_PKEY = UniqueKeys0.OMMER_PKEY;
    public static final UniqueKey<TransactionRecord> TRANSACTION_PKEY = UniqueKeys0.TRANSACTION_PKEY;
    public static final UniqueKey<TransactionReceiptRecord> TRANSACTION_RECEIPT_PKEY = UniqueKeys0.TRANSACTION_RECEIPT_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountRecord, BlockHeaderRecord> ACCOUNT__ACCOUNT_BLOCK_HASH_FKEY = ForeignKeys0.ACCOUNT__ACCOUNT_BLOCK_HASH_FKEY;
    public static final ForeignKey<BalanceDeltaRecord, BlockHeaderRecord> BALANCE_DELTA__BALANCE_DELTA_BLOCK_HASH_FKEY = ForeignKeys0.BALANCE_DELTA__BALANCE_DELTA_BLOCK_HASH_FKEY;
    public static final ForeignKey<BalanceDeltaRecord, TransactionRecord> BALANCE_DELTA__BALANCE_DELTA_TRANSACTION_HASH_FKEY = ForeignKeys0.BALANCE_DELTA__BALANCE_DELTA_TRANSACTION_HASH_FKEY;
    public static final ForeignKey<BlockHeaderRecord, ImportQueueRecord> BLOCK_HEADER__BLOCK_HEADER_HASH_FKEY = ForeignKeys0.BLOCK_HEADER__BLOCK_HEADER_HASH_FKEY;
    public static final ForeignKey<ContractCreatedRecord, BlockHeaderRecord> CONTRACT_CREATED__CONTRACT_CREATED_BLOCK_HASH_FKEY = ForeignKeys0.CONTRACT_CREATED__CONTRACT_CREATED_BLOCK_HASH_FKEY;
    public static final ForeignKey<ContractCreatedRecord, TransactionRecord> CONTRACT_CREATED__CONTRACT_CREATED_TRANSACTION_HASH_FKEY = ForeignKeys0.CONTRACT_CREATED__CONTRACT_CREATED_TRANSACTION_HASH_FKEY;
    public static final ForeignKey<ContractDestroyedRecord, BlockHeaderRecord> CONTRACT_DESTROYED__CONTRACT_DESTROYED_BLOCK_HASH_FKEY = ForeignKeys0.CONTRACT_DESTROYED__CONTRACT_DESTROYED_BLOCK_HASH_FKEY;
    public static final ForeignKey<ContractDestroyedRecord, TransactionRecord> CONTRACT_DESTROYED__CONTRACT_DESTROYED_TRANSACTION_HASH_FKEY = ForeignKeys0.CONTRACT_DESTROYED__CONTRACT_DESTROYED_TRANSACTION_HASH_FKEY;
    public static final ForeignKey<ContractEventRecord, BlockHeaderRecord> CONTRACT_EVENT__CONTRACT_EVENT_BLOCK_HASH_FKEY = ForeignKeys0.CONTRACT_EVENT__CONTRACT_EVENT_BLOCK_HASH_FKEY;
    public static final ForeignKey<ContractEventRecord, TransactionRecord> CONTRACT_EVENT__CONTRACT_EVENT_TRANSACTION_HASH_FKEY = ForeignKeys0.CONTRACT_EVENT__CONTRACT_EVENT_TRANSACTION_HASH_FKEY;
    public static final ForeignKey<OmmerRecord, BlockHeaderRecord> OMMER__OMMER_NEPHEW_HASH_FKEY = ForeignKeys0.OMMER__OMMER_NEPHEW_HASH_FKEY;
    public static final ForeignKey<TransactionRecord, BlockHeaderRecord> TRANSACTION__TRANSACTION_BLOCK_HASH_FKEY = ForeignKeys0.TRANSACTION__TRANSACTION_BLOCK_HASH_FKEY;
    public static final ForeignKey<TransactionReceiptRecord, BlockHeaderRecord> TRANSACTION_RECEIPT__TRANSACTION_RECEIPT_BLOCK_HASH_FKEY = ForeignKeys0.TRANSACTION_RECEIPT__TRANSACTION_RECEIPT_BLOCK_HASH_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<BalanceDeltaRecord, Long> IDENTITY_BALANCE_DELTA = Internal.createIdentity(BalanceDelta.BALANCE_DELTA, BalanceDelta.BALANCE_DELTA.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountRecord> ACCOUNT_PKEY = Internal.createUniqueKey(Account.ACCOUNT, "account_pkey", Account.ACCOUNT.ADDRESS, Account.ACCOUNT.BLOCK_HASH);
        public static final UniqueKey<BalanceDeltaRecord> BALANCE_DELTA_PKEY = Internal.createUniqueKey(BalanceDelta.BALANCE_DELTA, "balance_delta_pkey", BalanceDelta.BALANCE_DELTA.ID);
        public static final UniqueKey<BlockHeaderRecord> BLOCK_HEADER_PKEY = Internal.createUniqueKey(BlockHeader.BLOCK_HEADER, "block_header_pkey", BlockHeader.BLOCK_HEADER.HASH);
        public static final UniqueKey<ContractCreatedRecord> CONTRACT_CREATED_PKEY = Internal.createUniqueKey(ContractCreated.CONTRACT_CREATED, "contract_created_pkey", ContractCreated.CONTRACT_CREATED.ADDRESS, ContractCreated.CONTRACT_CREATED.TRANSACTION_HASH);
        public static final UniqueKey<ContractDestroyedRecord> CONTRACT_DESTROYED_PKEY = Internal.createUniqueKey(ContractDestroyed.CONTRACT_DESTROYED, "contract_destroyed_pkey", ContractDestroyed.CONTRACT_DESTROYED.ADDRESS, ContractDestroyed.CONTRACT_DESTROYED.TRANSACTION_HASH);
        public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "flyway_schema_history_pk", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK);
        public static final UniqueKey<ImportQueueRecord> IMPORT_QUEUE_PKEY = Internal.createUniqueKey(ImportQueue.IMPORT_QUEUE, "import_queue_pkey", ImportQueue.IMPORT_QUEUE.NUMBER, ImportQueue.IMPORT_QUEUE.HASH);
        public static final UniqueKey<ImportQueueRecord> IMPORT_QUEUE_HASH_KEY = Internal.createUniqueKey(ImportQueue.IMPORT_QUEUE, "import_queue_hash_key", ImportQueue.IMPORT_QUEUE.HASH);
        public static final UniqueKey<MetadataRecord> METADATA_PKEY = Internal.createUniqueKey(Metadata.METADATA, "metadata_pkey", Metadata.METADATA.KEY);
        public static final UniqueKey<OmmerRecord> OMMER_PKEY = Internal.createUniqueKey(Ommer.OMMER, "ommer_pkey", Ommer.OMMER.HASH);
        public static final UniqueKey<TransactionRecord> TRANSACTION_PKEY = Internal.createUniqueKey(Transaction.TRANSACTION, "transaction_pkey", Transaction.TRANSACTION.HASH);
        public static final UniqueKey<TransactionReceiptRecord> TRANSACTION_RECEIPT_PKEY = Internal.createUniqueKey(TransactionReceipt.TRANSACTION_RECEIPT, "transaction_receipt_pkey", TransactionReceipt.TRANSACTION_RECEIPT.TRANSACTION_HASH);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AccountRecord, BlockHeaderRecord> ACCOUNT__ACCOUNT_BLOCK_HASH_FKEY = Internal.createForeignKey(io.exflo.postgres.jooq.Keys.BLOCK_HEADER_PKEY, Account.ACCOUNT, "account__account_block_hash_fkey", Account.ACCOUNT.BLOCK_HASH);
        public static final ForeignKey<BalanceDeltaRecord, BlockHeaderRecord> BALANCE_DELTA__BALANCE_DELTA_BLOCK_HASH_FKEY = Internal.createForeignKey(io.exflo.postgres.jooq.Keys.BLOCK_HEADER_PKEY, BalanceDelta.BALANCE_DELTA, "balance_delta__balance_delta_block_hash_fkey", BalanceDelta.BALANCE_DELTA.BLOCK_HASH);
        public static final ForeignKey<BalanceDeltaRecord, TransactionRecord> BALANCE_DELTA__BALANCE_DELTA_TRANSACTION_HASH_FKEY = Internal.createForeignKey(io.exflo.postgres.jooq.Keys.TRANSACTION_PKEY, BalanceDelta.BALANCE_DELTA, "balance_delta__balance_delta_transaction_hash_fkey", BalanceDelta.BALANCE_DELTA.TRANSACTION_HASH);
        public static final ForeignKey<BlockHeaderRecord, ImportQueueRecord> BLOCK_HEADER__BLOCK_HEADER_HASH_FKEY = Internal.createForeignKey(io.exflo.postgres.jooq.Keys.IMPORT_QUEUE_HASH_KEY, BlockHeader.BLOCK_HEADER, "block_header__block_header_hash_fkey", BlockHeader.BLOCK_HEADER.HASH);
        public static final ForeignKey<ContractCreatedRecord, BlockHeaderRecord> CONTRACT_CREATED__CONTRACT_CREATED_BLOCK_HASH_FKEY = Internal.createForeignKey(io.exflo.postgres.jooq.Keys.BLOCK_HEADER_PKEY, ContractCreated.CONTRACT_CREATED, "contract_created__contract_created_block_hash_fkey", ContractCreated.CONTRACT_CREATED.BLOCK_HASH);
        public static final ForeignKey<ContractCreatedRecord, TransactionRecord> CONTRACT_CREATED__CONTRACT_CREATED_TRANSACTION_HASH_FKEY = Internal.createForeignKey(io.exflo.postgres.jooq.Keys.TRANSACTION_PKEY, ContractCreated.CONTRACT_CREATED, "contract_created__contract_created_transaction_hash_fkey", ContractCreated.CONTRACT_CREATED.TRANSACTION_HASH);
        public static final ForeignKey<ContractDestroyedRecord, BlockHeaderRecord> CONTRACT_DESTROYED__CONTRACT_DESTROYED_BLOCK_HASH_FKEY = Internal.createForeignKey(io.exflo.postgres.jooq.Keys.BLOCK_HEADER_PKEY, ContractDestroyed.CONTRACT_DESTROYED, "contract_destroyed__contract_destroyed_block_hash_fkey", ContractDestroyed.CONTRACT_DESTROYED.BLOCK_HASH);
        public static final ForeignKey<ContractDestroyedRecord, TransactionRecord> CONTRACT_DESTROYED__CONTRACT_DESTROYED_TRANSACTION_HASH_FKEY = Internal.createForeignKey(io.exflo.postgres.jooq.Keys.TRANSACTION_PKEY, ContractDestroyed.CONTRACT_DESTROYED, "contract_destroyed__contract_destroyed_transaction_hash_fkey", ContractDestroyed.CONTRACT_DESTROYED.TRANSACTION_HASH);
        public static final ForeignKey<ContractEventRecord, BlockHeaderRecord> CONTRACT_EVENT__CONTRACT_EVENT_BLOCK_HASH_FKEY = Internal.createForeignKey(io.exflo.postgres.jooq.Keys.BLOCK_HEADER_PKEY, ContractEvent.CONTRACT_EVENT, "contract_event__contract_event_block_hash_fkey", ContractEvent.CONTRACT_EVENT.BLOCK_HASH);
        public static final ForeignKey<ContractEventRecord, TransactionRecord> CONTRACT_EVENT__CONTRACT_EVENT_TRANSACTION_HASH_FKEY = Internal.createForeignKey(io.exflo.postgres.jooq.Keys.TRANSACTION_PKEY, ContractEvent.CONTRACT_EVENT, "contract_event__contract_event_transaction_hash_fkey", ContractEvent.CONTRACT_EVENT.TRANSACTION_HASH);
        public static final ForeignKey<OmmerRecord, BlockHeaderRecord> OMMER__OMMER_NEPHEW_HASH_FKEY = Internal.createForeignKey(io.exflo.postgres.jooq.Keys.BLOCK_HEADER_PKEY, Ommer.OMMER, "ommer__ommer_nephew_hash_fkey", Ommer.OMMER.NEPHEW_HASH);
        public static final ForeignKey<TransactionRecord, BlockHeaderRecord> TRANSACTION__TRANSACTION_BLOCK_HASH_FKEY = Internal.createForeignKey(io.exflo.postgres.jooq.Keys.BLOCK_HEADER_PKEY, Transaction.TRANSACTION, "transaction__transaction_block_hash_fkey", Transaction.TRANSACTION.BLOCK_HASH);
        public static final ForeignKey<TransactionReceiptRecord, BlockHeaderRecord> TRANSACTION_RECEIPT__TRANSACTION_RECEIPT_BLOCK_HASH_FKEY = Internal.createForeignKey(io.exflo.postgres.jooq.Keys.BLOCK_HEADER_PKEY, TransactionReceipt.TRANSACTION_RECEIPT, "transaction_receipt__transaction_receipt_block_hash_fkey", TransactionReceipt.TRANSACTION_RECEIPT.BLOCK_HASH);
    }
}
